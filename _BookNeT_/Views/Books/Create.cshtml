@model _BookNeT_.Models.Books

<h2>Add a New Book</h2>
<form method="post" action="/Books/Create" onsubmit="return validateForm()">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label>Book's name *</label>
        <input type="text" name="Title" class="form-control" required minlength="1" maxlength="100" />
    </div>

    <div class="form-group">
        <label>Author's name *</label>
        <input type="text" name="Author" class="form-control" required minlength="1" maxlength="100" />
    </div>

    <div class="form-group">
        <label>Publisher *</label>
        <input type="text" name="Publisher" class="form-control" required />
    </div>

    <div class="form-group">
        <label>Year Of Publication</label>
        <input type="number" name="YearOfPublication" class="form-control" min="1900" max="2024" />
    </div>

    <div class="form-group">
        <label>Image URL</label>
        <input type="url" name="ImageUrl" class="form-control" placeholder="Enter the image URL" />
    </div>

    <div class="form-group">
        <label>Format *</label>
        <select name="Format" class="form-control" required>
            <option value="">Select Format</option>
            <option value="pdf">PDF</option>
            <option value="mobi">MOBI</option>
            <option value="f2b">F2B</option>
            <option value="epub">EPUB</option>
        </select>
    </div>

    <div class="form-group">
        <label>Age Category</label>
        <select name="AgeRestriction" class="form-control">
            <option value="">All Ages</option>
            <option value="8">Children (8-12)</option>
            <option value="12">Young Teen (12-14)</option>
            <option value="13">Teen & Young Adult (13-17)</option>
            <option value="18">Adult (18+)</option>
        </select>
    </div>
    
    <div class="form-group">
        <label>Genre *</label>
        <select name="Genre" class="form-control" required>
            <option value="">Select Genre</option>
            <option value="Fiction">Fiction</option>
            <option value="Non-Fiction">Non-Fiction</option>
            <option value="Science Fiction">Science Fiction</option>
            <option value="Fantasy">Fantasy</option>
            <option value="Mystery">Mystery</option>
            <option value="Biography">Biography</option>
            <option value="History">History</option>
            <option value="Self-Help">Self-Help</option>
        </select>
    </div>

    <div class="form-group">
        <label>Purchase Price *</label>
        <input type="number" name="PurchasePrice" class="form-control" required min="0" step="0.01" />
    </div>

    <div class="form-group">
        <label>Borrow Price</label>
        <input type="number" name="BorrowPrice" class="form-control" min="0" step="0.01" />
    </div>

    <div class="form-group">
        <label>Number of copies *</label>
        <input type="number" name="Stock" class="form-control" required min="0" />
    </div>

    <div class="form-group">
        <label>Is Borrowable *</label>
        <select name="IsBorrowable" class="form-control" required>
            <option value="">Select</option>
            <option value="true">Yes</option>
            <option value="false">No</option>
        </select>
    </div>

    <div class="form-group">
        <label>Is Discounted *</label>
        <select name="IsDiscounted" class="form-control" required>
            <option value="">Select</option>
            <option value="true">Yes</option>
            <option value="false">No</option>
        </select>
    </div>

    <div class="form-group">
        <label>Discount Percentage</label>
        <input type="number" name="DiscountPercentage" class="form-control" min="0" max="100" step="0.01" placeholder="Enter discount percentage" />
    </div>

    <div class="form-group">
        <label>Discount End Date</label>
        <input type="date" name="DiscountEndDate" class="form-control" />
    </div>

    <div class="form-group">
        <label>Status *</label>
        <select id="statusField" name="Status" class="form-control" required>
            <option value="Available" @(Model?.Status == "Available" ? "selected" : "")>Available</option>
            <option value="Out of Stock" @(Model?.Status == "Out of Stock" ? "selected" : "")>Out of Stock</option>
            <option value="Coming Soon" @(Model?.Status == "Coming Soon" ? "selected" : "")>Coming Soon</option>
        </select>
    </div>


    <div class="form-group">
        <label>Description</label>
        <textarea name="Description" class="form-control" placeholder="Enter book description"></textarea>
    </div>
    

    <button type="submit" class="btn btn-primary">ADD</button>
    <a href="/Books/Index" class="btn btn-secondary">Back to list</a>
</form>

<script>
    function updateStatus() {
        const stockValue = parseInt(document.querySelector('input[name="Stock"]').value);
        const statusField = document.getElementById('statusField');

        // מעדכן את האפשרויות הזמינות
        const availableOption = statusField.querySelector('option[value="Available"]');
        const outOfStockOption = statusField.querySelector('option[value="Out of Stock"]');
        const comingSoonOption = statusField.querySelector('option[value="Coming Soon"]');

        if (stockValue === 0) {
            availableOption.disabled = true;     // חוסם Available כשאין מלאי
            outOfStockOption.disabled = false;
            comingSoonOption.disabled = false;   // מאפשר Coming Soon רק כשאין עותקים
            if (statusField.value === "Available") {
                statusField.value = "Out of Stock";
            }
        } else {
            availableOption.disabled = false;
            outOfStockOption.disabled = true;    // חוסם Out of Stock כשיש מלאי
            comingSoonOption.disabled = true;    // חוסם Coming Soon כשיש עותקים
            if (statusField.value === "Out of Stock" || statusField.value === "Coming Soon") {
                statusField.value = "Available";
            }
        }
    }

    // מאזינים לשינויים
    document.querySelector('input[name="Stock"]').addEventListener('change', updateStatus);
    document.querySelector('select[name="IsBorrowable"]').addEventListener('change', updateStatus);

    // הפעלה ראשונית של הבדיקה
    updateStatus();
</script>