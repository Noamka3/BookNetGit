@using _BookNeT_.Models
@model _BookNeT_.Models.Books
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<div class="page-container">
    <!-- Left Column (Book details) -->
    <div class="left-column">
        <div class="book-details-container">
            <b><h1 class="book-title">@Model.Title</h1></b>
            
            <div class="book-image-container">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="@Model.Title" class="book-image" />
                }
                else
                {
                    <div class="no-image">
                        <span>No Image Available</span>
                    </div>
                }
            </div>

            <div class="book-info">
                <table class="info-table">
                    <tr><th>Author</th><td>@Model.Author</td></tr>
                    <tr><th>Publisher</th><td>@Model.Publisher</td></tr>
                    <tr><th>Year Of Publication</th><td>@Model.YearOfPublication</td></tr>
                    <tr><th>Format</th><td>@Model.Format</td></tr>
                    <tr><th>Genre</th><td>@Model.Genre</td></tr>
                    <tr><th>Available Copies</th><td>@Model.Stock</td></tr>
                    <tr><th>Status</th><td>@Model.Status</td></tr>
                </table>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="book-description">
                        <h3>Description</h3>
                        @{
                            string[] paragraphs = Model.Description.Split(new[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var paragraph in paragraphs)
                            {
                                <p>@paragraph</p>
                            }
                        }
                    </div>
                }

                <!-- Action Buttons for Purchase or Borrow -->
                <div class="action-buttons">
                    @if (Model.Stock.HasValue && Model.Stock.Value > 0)
                    {
                        <div class="pricing-section">
                                @if (Model.IsDiscounted.HasValue && Model.IsDiscounted.Value)
                                {
                                    <div class="price-details discounted">
                                        <span class="original-price">Original Price: $@Model.PurchasePrice</span>
                                        <span class="sale-price">₪@Model.CalculateDiscountedPrice()</span>
                                        @if (Model.DiscountEndDate.HasValue)
                                        {
                                            <small class="discount-end-date">Offer ends: @Model.DiscountEndDate.Value.ToString("dd/MM/yyyy")</small>
                                        }
                                        <button class="btn purchase-btn">
                                            <i class="fas fa-shopping-cart"></i> Purchase: ₪@Model.PurchasePrice
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="price-details">
                                        <button class="btn btn-primary purchase-btn">
                                            <i class="fas fa-shopping-cart"></i>  Purchase: ₪@Model.PurchasePrice
                                        </button>
                                    </div>
                                }

                            @if (Model.IsBorrowable.HasValue && Model.IsBorrowable.Value)
                            {
                                <div class="borrow-section">
                                    <button class="btn borrow-btn">
                                        <i class="fas fa-book"></i> Borrow: ₪@Model.BorrowPrice
                                    </button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="out-of-stock">
                            This book is currently out of stock
                            @if (Model.IsBorrowable == true)
                            {
                                <br/>
                                <a href="@Url.Action("JoinWaitingList", "Library", new { bookId = Model.BookID })" class="join-waitlist">
                                    Join Waiting List
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Right Column (Reviews and Add Review Form) -->
    <div class="right-column">
        <div class="reviews-container">
            <h2><b>Book Reviews</b></h2>

            <div class="add-review-form">
                <h3>Add Your Review</h3>

                @* Form for submitting a review *@
                @using (Html.BeginForm("AddReview", "Library", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()  // להוסיף את השורה הזו
                    @Html.Hidden("BookID", Model.BookID)
                    <div class="rating-stars">
                        <span>Your Rating:</span>
                        <div class="stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="far fa-star" data-rating="@i"></i>
                            }
                        </div>
                        <input type="hidden" name="Rating" id="selectedRating"/>
                    </div>
                    <textarea name="FeedbackText" placeholder="Write your review here..."></textarea>
                    <button type="submit" class="submit-review">Submit</button>
                    
                }
            </div>


            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            
            <div class="reviews-list">
                @foreach (var review in ViewBag.Reviews ?? Enumerable.Empty<ServiceFeedback>())
                {
                <div class="review-item">
                    <div class="review-header">
                        <div class="review-stars">
                            @{
                                int rating = review.Rating ?? 0;
                            }
                            @for (int i = 1; i <= rating; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                            @for (int i = rating + 1; i <= 5; i++)
                            {
                                <i class="far fa-star"></i>
                            }
                        </div>
                        <div class="review-author-date">
                            <span class="review-author">By System User</span>
                            <span class="review-date">@review.FeedbackDate?.ToString("dd/MM/yyyy")</span>
                        </div>
                    </div>
                        <div class="review-text">
                            @review.FeedbackText
                        </div>
                    </div>
                }
            </div>
        </div>
        </div>
    </div>


<!-- Back to Library Link -->
<div class="back-link">
    <a href="/Library/Index">Back to Library</a>
</div>

<style>
    .page-container {
        display: flex;
        justify-content: space-between;
    }

    .left-column {
        flex: 1;
        max-width: 48%;
    }

    .right-column {
        flex: 1;
        max-width: 35%;
    }

    .book-details-container {
        max-width: 800px;
        margin: 10px auto;
        padding: 20px;
        font-family: "Calibri Light", sans-serif;
    }

    .book-title {
        text-align: center;
        margin-bottom: 30px;
        color: #333;
    }
    .reviews-container,
    .add-review-form,
    .review-item,
    .review-author,
    .review-text {
        font-family: "Calibri Light", sans-serif;
    }
    
    
    .book-image-container {
        text-align: center;
        margin: 20px 0;
    }

    .book-image {
        width: 300px;
        height: 450px;
        object-fit: contain;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .no-image {
        width: 300px;
        height: 450px;
        margin: 0 auto;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        border: 2px dashed #ddd;
        color: #666;
    }

    .book-info {
        margin-top: 30px;
    }

    .info-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
    }

    .info-table th,
    .info-table td {
        padding: 12px;
        border-bottom: 1px solid #eee;
        text-align: left;
    }

    .info-table th {
        width: 200px;
        color: #666;
        font-weight: 600;
    }

    .action-buttons {
        text-align: center;
        margin-top: 30px;
    }

    .btn {
        padding: 10px 20px;
        margin: 0 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .purchase-btn, .borrow-btn {
        width: auto;
        min-width: 200px;
        max-width: 250px;
        margin: 0 auto;
        margin-bottom: 10px; /* רווח בין הכפתורים */
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 8px;
        padding: 8px 12px;
        font-size: 14px;
        font-weight: bold;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    .borrow-btn {
        background: #6c757d;
        color: white;
    }

    .purchase-btn {
        background: #007bff;
        color: white;
    }

    /* עיצוב לאייקונים בתוך הכפתורים */
    .borrow-btn i, .purchase-btn i {
        margin-right: 5px;
    }

    .btn:hover {
        opacity: 0.9;
        transform: translateY(-1px);
    }

    .out-of-stock {
        color: #dc3545;
        font-weight: 500;
        padding: 10px;
        background-color: #f8d7da;
        border-radius: 4px;
    }

    .btn i {
        margin-right: 5px;
    }

    .book-description {
        margin-top: 30px;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .book-description h3 {
        margin-bottom: 15px;
        color: #333;
        font-size: 18px;
        font-weight: bold;
    }

    .book-description p {
        margin-bottom: 15px;
        color: #555;
        font-size: 14px;
        line-height: 1.8;
    }

    .back-link {
        display: flex;
        justify-content: center;
        margin: 15px auto;
        padding: 0;
        width: 100%;
    }

    .back-link a {
        color: #6c757d;
        text-decoration: none;
        font-size: 14px;
        padding-left: 0;
        margin: 0;
    }

    /* review style */
    .reviews-container {
        padding: 25px;
        background-color: #fff;
        border-radius: 12px;
        font-size: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        margin-top: 15px;
    }

    /* the title of the comments */
    .reviews-container h2 {
        font-size: 24px;
        color: #2c3e50;
        margin-bottom: 25px;
        padding-bottom: 10px;
        border-bottom: 2px solid #eee;
    }

    .add-review-form {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .add-review-form h3 {
        font-size: 18px;
        margin-bottom: 5px;
        margin-top: 5px;
    }

    .rating-stars {
        margin: 15px 0;
    }

    .stars {
        display: inline-block;
        margin-left: 10px;
    }

    .stars i {
        color: #ffd700;
        cursor: pointer;
        margin: 0 5px;
        font-size: 20px;
        transition: transform 0.2s ease;
    }

    .stars i:hover {
        transform: scale(1.2);
    }

    /* comments style */
    .review-item {
        background-color: #fff;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    
    .review-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
    }

    .review-header {
        margin-bottom: 10px;
    }

    .review-author-date {
        margin-top: 5px;
        margin-bottom: 10px;
    }


    .review-stars i {
        font-size: 18px;
        color: #ffd700;
    }


    .review-stars {
        display: flex;
        justify-content: flex-start;
        margin-right: 10px;
    }

    .review-author {
        font-weight: 600;
        color: #333;
    }

    .review-date {
        color: #999;
        font-size: 0.9em;
    }

    .review-text {
        color: #333;
        font-size: 14px;
        line-height: 1.6;
        margin-top: 10px; /* מרווח קטן בין התגובה לכוכבים */
    }

    .reviews-list > div:not(:last-child) {
        margin-bottom: 20px;
    }
    
    textarea[name="FeedbackText"] {
        width: 100%;
        min-height: 120px;
        padding: 15px;
        border: 1px solid #ccc;
        border-radius: 8px;
        font-size: 16px;
        resize: vertical;
    }
    
    textarea[name="ReviewText"]:focus {
        border-color: #007bff;
        outline: none;
        box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
    }
    .submit-review {
        background-color: #007bff;
        color: white;
        padding: 8px;
        border: none;
        border-radius: 10px; /* עיצוב עם קצוות מעוגלים */
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease; /* מוסיף אנימציה */
        margin-top: 10px;
        font-size: 13px;
    }

    .submit-review:hover {
        background-color: #0056b3;
        transform: translateY(-2px); /* אפקט קפיצה קל */
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 6px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

   
    
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const stars = document.querySelectorAll('.stars i');
        const ratingInput = document.getElementById('selectedRating');

        stars.forEach(star => {
            star.addEventListener('mouseover', function() {
                const rating = this.getAttribute('data-rating');
                highlightStars(rating);
            });

            star.addEventListener('click', function() {
                const rating = this.getAttribute('data-rating');
                ratingInput.value = rating;
                highlightStars(rating);
            });
        });

        document.querySelector('.stars').addEventListener('mouseout', function() {
            const selectedRating = ratingInput.value || 0;
            highlightStars(selectedRating);
        });


        function highlightStars(rating) {
            stars.forEach(star => {
                const starRating = star.getAttribute('data-rating');
                if (starRating <= rating) {
                    star.classList.remove('far');
                    star.classList.add('fas');
                    star.style.transform = 'scale(1.1)';
                } else {
                    star.classList.remove('fas');
                    star.classList.add('far');
                    star.style.transform = 'scale(1)';
                }
            });
        }
    });
</script>