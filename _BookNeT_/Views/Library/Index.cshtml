@model IEnumerable<_BookNeT_.Models.Books>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<div class="library-container">
    <h1 class="modern-decorative">BookNeT's Library</h1>    

    <div class="featured-banners">
        <div class="banner-card" onclick="window.location.href='/Books/BestOf2024'">
            <img src="https://media.istockphoto.com/id/1495368614/photo/woman-relaxing-on-sofa-at-home-and-reading-book.jpg?s=612x612&w=0&k=20&c=SetOqLYVZW7JBCBAJXF7jXouY_qkeik9ni1i0nSVVNg=" alt="Best Books 2024" class="banner-image" onerror="this.src='https://via.placeholder.com/400x200/1a4a5a/ffffff?text=Best+of+2024'">
            <div class="banner-content">
                <div class="banner-title">Best Books of 2024</div>
                <div class="banner-subtitle">Handpicked by Our Editors</div>
            </div>
        </div>

        <div class="banner-card" onclick="window.location.href='/Books/Newest'">
            <img src="https://media.istockphoto.com/id/949118068/photo/books.jpg?s=612x612&w=0&k=20&c=1vbRHaA_aOl9tLIy6P2UANqQ27KQ_gSF-BH0sUjQ730=" alt="Monthly Picks" class="banner-image" onerror="this.src='https://via.placeholder.com/400x200/2a5a6a/ffffff?text=Monthly+Picks'">
            <div class="banner-content">
                <div class="banner-title">Newest Books</div>
                <div class="banner-subtitle">Books added in the last week</div>
            </div>
        </div>

        <div class="banner-card" onclick="window.location.href='/Books/KidsBooks'">
            <img src="https://media.istockphoto.com/id/1805651010/photo/children-visiting-the-library.jpg?s=612x612&w=0&k=20&c=6A3PWXGcKp-v0qercMT5VF409W2kvyFUwPIpy5DadFI=" alt="Kids Books" class="banner-image">
            <div class="banner-content">
                <div class="banner-title">The Best Kids Books</div>
                <div class="banner-subtitle">Top Children's Books of 2024</div>
            </div>
        </div>
    </div>
    
    <!-- Search and filter panel -->
    <div class="filters-panel">
        <form method="get" action="@Url.Action("Index", "Library")">
            <div class="filters-grid">
                <div class="filter-item search-box">
                    <label for="searchTerm">Search Book:</label>
                    <input type="text" id="searchTerm" name="searchTerm" class="form-control"
                           placeholder="Enter book title..." value="@Request.QueryString["searchTerm"]">
                </div>

                <div class="filter-item">
                    <label for="sortDropdown">Sort by:</label>
                    <select id="sortDropdown" name="sortBy" class="form-control">
                        <option value="">Default</option>
                        <option value="PriceAsc">Price (Low to High)</option>
                        <option value="PriceDesc">Price (High to Low)</option>
                        <option value="MostPurchased">Most Popular</option>
                        <option value="YearDesc">Newest First</option>
                        <option value="YearAsc">Oldest First</option>
                    </select>
                </div>

                <div class="filter-item">
                    <label for="author">Author:</label>
                    <select id="author" name="author" class="form-control">
                        <option value="">All Authors</option>
                        @foreach (var author in ViewBag.Authors)
                        {
                            <option value="@author">@author</option>
                        }
                    </select>
                </div>

                <div class="filter-item">
                    <label for="genre">Genre:</label>
                    <select id="genre" name="genre" class="form-control">
                        <option value="">All Genres</option>
                        @foreach (var genre in ViewBag.Genres)
                        {
                            <option value="@genre">@genre</option>
                        }
                    </select>
                </div>

                <div class="filter-item price-range">
                    <label>Price Range:</label>
                    <div class="range-slider">
                        <input type="range" id="priceRange" min="0" max="500" step="10" value="0"
                               oninput="updatePriceLabel(this.value)">
                        <span id="priceLabel">₪0 - ₪200</span>
                        <input type="hidden" name="minPrice" id="minPrice">
                        <input type="hidden" name="maxPrice" id="maxPrice">
                    </div>
                </div>

                <div class="filter-item">
                    <label for="publicationYear">Publication Year:</label>
                    <select id="publicationYear" name="publicationYear" class="form-control">
                        <option value="">All Years</option>
                        @for (int year = ViewBag.MaxYear; year >= ViewBag.MinYear; year--)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>

                
                
                <div class="filter-item checkboxes">
                    <label class="checkbox-label">
                        <input type="checkbox" name="isBorrowable" value="true">
                        Available for Borrowing
                    </label>
                    <label class="checkbox-label">
                        <input type="checkbox" name="showDiscounted" value="true">
                        Show Only Discounted Books
                    </label>
                </div>

                <div class="filter-buttons">
                    <button type="submit" class="btn btn-primary">Apply</button>
                    <a href="@Url.Action("Index", "Library")" class="btn btn-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>

    <div class="book-grid">
        @foreach (var book in Model)
        {
            <div class="book-card">
                <div class="book-image">
                    @if (!string.IsNullOrEmpty(book.ImageUrl))
                    {
                        <img src="@book.ImageUrl" alt="@book.Title" />
                    }
                    else
                    {
                        <div class="no-image">
                            <span>NO IMAGE</span>
                        </div>
                    }
                    <div class="book-overlay">
                        <button class="favorite-btn" onclick="toggleFavorite(this)" title="Add to Favorites">
                            <i class="far fa-heart"></i>
                        </button>
                    </div>
                </div>
                <div class="book-details">
                    <h3>@book.Title</h3>
                    <p class="author">By: @book.Author</p>
                    <p class="genre">Genre: @book.Genre</p>

                    <div class="action-buttons">
                        <button class="btn details-btn" onclick="window.location.href='/Library/Details/@book.BookID'">
                            <i class="fas fa-info-circle"></i> Details
                        </button>
                        
                        @if (book.IsBorrowable == true)
                        {
                            <button class="btn borrow-btn">
                                <i class="fas fa-book"></i> Borrow: ₪@book.BorrowPrice
                            </button>
                        }

                        @if (book.IsDiscounted.HasValue && book.IsDiscounted.Value)
                        {
                            <button class="btn purchase-btn">
                                <div class="price-row">
                                    <i class="fas fa-shopping-cart"></i>
                                    Purchase:<span class="original-price">₪@book.PurchasePrice</span>
                                </div>
                                <span class="sale-price">₪@book.CalculateDiscountedPrice()</span>
                            </button>
                        }
                        else
                        {
                            <button class="btn purchase-btn">
                                <div class="price-row">
                                    <i class="fas fa-shopping-cart"></i>
                                    Purchase: ₪@book.PurchasePrice
                                </div>
                            </button>
                        }
                    </div>

                    
                </div>
                </div>
        }
    </div>
</div>

<style>
        
    .library-container {
        width: 85%;  /* קובע את הרוחב ל-85% מהמסך */
        max-width: 1400px;  /* רוחב מקסימלי גדול יותר */
        margin: 0 auto;
        padding: 20px;
        box-sizing: border-box;
    }

    .book-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 30px;
        width: 100%;
    }

    .book-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1); /* צל מרשים */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }


    .book-card:hover {
        transform: translateY(-5px); /* תזוזה עדינה */
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    .book-image {
        position: relative;
        width: 100%;
        padding-top: 150%; /* יחס של 3:2 (גובה לפי הרוחב) */
        overflow: hidden;
        border-bottom: 1px solid #f0f0f0; /* קו תחתון דקורטיבי */
    }

    .book-image img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover; /* פתרון בין COVER ל-CONTAIN */
    }

    .book-card:hover .book-image img {
        transform: scale(1.05);
    }

    .book-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.4);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 12px;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .book-card:hover .book-overlay {
        opacity: 1;
    }

    .favorite-btn {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
        align-self: flex-end;
    }

    .favorite-btn.active i {
        color: #ff4d4d;
        font-weight: 900;
    }
    
    .book-details {
        padding: 15px;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .book-details h3 {
        font-size: 18px;
        font-weight: bold;
        color: #2c3e50; /* גוון אפור כהה */
        margin: 0;
    }

    .book-details .author,
    .book-details .genre {
        font-size: 14px;
        color: #7f8c8d; /* גוון אפור בהיר */
    }

    .author, .genre {
        margin: 2px 0;
        color: #666;
        font-size: 0.85em;
    }

    .action-buttons {
        margin-top: auto;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .btn {
        padding: 5px 5px; 
        font-size: 12px; /* הגדל את גודל הפונט */
        font-weight: bold;
        text-align: center;
        border-radius: 6px;
        border: none;
        transition: all 0.1s ease;
        width: 100%; /* אחידות ברוחב */
    }
    
    .action-buttons .btn {
        padding: 8px 12px;
        font-size: 14px;
        font-weight: bold;
        text-align: center;
        border-radius: 6px;
        border: none;
        transition: all 0.3s ease;
    }

    .details-btn {
        background: #007bff; /* כחול */
        color: white;
        border: none;
        padding: 8px 12px;
        font-size: 14px;
        border-radius: 6px;
        transition: background-color 0.3s ease;
        width: 100%; /* אחידות ברוחב הכפתור */
    }

    .details-btn:hover {
        background: #0056b3; /* כחול כהה יותר */
    }


    .purchase-btn {
        display: flex;
        flex-direction: column;
        gap: 4px;
        width: 100%;
        padding: 12px 20px;
        box-sizing: border-box;
        font-size: 14px;
    }


    .purchase-btn:hover {
        background: #0056b3; /* כחול כהה יותר */
    }

    .purchase-btn span {
        width: 100%;
        text-align: center;
    }


    /* מחיר רגיל - שורה אחת */
    .purchase-btn > div:not(.price-details) {
        display: flex;
        flex-direction: row;
        align-items: center;
    }
   
    
    /* כפתור "Borrow" */
    .borrow-btn {
        background: #6c757d; /* אפור כהה */
        color: white;
        border: none;
        padding: 8px 12px;
        font-size: 14px;
        border-radius: 6px;
        transition: background-color 0.3s ease;
        width: 100%; /* אחידות ברוחב הכפתור */
    }

    .borrow-btn:hover {
        background: #495057; /* אפור כהה יותר */
    }

        
    
    
    
    .btn:hover {
        filter: brightness(1.1);
    }

    .price-container {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 8px; /* רווחים בין האלמנטים */
    }
    
    .price-container.discount {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 5px; /* ריווח בין המחיר והתאריך */
    }

    /* סטייל מיוחד כשיש מחיר במבצע */
    .price-container .purchase-btn {
        flex-direction: column; /* שינוי לעמודה אנכית רק כשיש מחיר במבצע */
        gap: 4px; /* מרווח קטן יותר בין המחירים */
    }

    .purchase-btn .price-row {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 4px;
    }
    
    /* סידור המחירים */
    .original-price {
        text-decoration: line-through;
        color: #999;
        font-size: 14px;
    }

    .sale-price {
        color: #e74c3c;
        font-weight: bold;
        font-size: 16px;
        text-align: center;
    }

    /* טיפול בתאריך סיום המבצע */
    .sale-badge {
        font-size: 12px;
        color: #e74c3c;
        font-weight: bold;
        margin-top: 5px;
        text-align: center;
    }

    .price-details {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 4px;
    }
    
    .price-details .original-price {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 4px;
    }
    
    .original-price {
        text-decoration: line-through; /* קו מחוק */
        color: #999; /* אפור */
        font-size: 14px;
        margin-right: 4px; /* רווח בין המחיר למחוק למחיר החדש */
    }
  
    .no-image {
        height: 100%;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #999;
    }

    .filters-panel {
        background: #f9f9f9; /* רקע עדין */
        padding: 20px;
        border-radius: 10px; /* פינות מעוגלות */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* צל עדין */
        margin-bottom: 30px;
    }
    .filter-item label {
        font-size: 14px;
        font-weight: bold;
        color: #005f8b; /* תכלת כהה */
        margin-bottom: 8px;
        display: block;
    }

    .filter-item .form-control {
        width: 100%;
        padding: 8px 12px;
        font-size: 14px;
        border: 1px solid #dcdcdc;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    .filter-item .form-control:focus {
        border-color: #37a8bc;
        box-shadow: 0 0 5px rgba(55, 168, 188, 0.5);
        outline: none;
    }


    .filter-buttons .btn {
        padding: 10px 20px;
        font-size: 14px;
        font-weight: bold;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

    .filter-buttons .btn-primary {
        background: #0078a8;
        color: white;
        border: none;
    }

    .filter-buttons .btn-primary:hover {
        background: #005f8b;
    }

    .filter-buttons .btn-secondary {
        background: #f0f0f0;
        color: #333;
        border: none;
    }

    .filter-buttons .btn-secondary:hover {
        background: #dcdcdc;
    }
    
    
   
    .container, .content, .main-content { /*tell to kadosh to add it*/
        width: 100%;
        max-width: 100%;
    }
    
    
    .navbar-container { 
        width: 85%;
        max-width: 1400px;
        margin: 0 auto;
    }

    .featured-banners {
        margin: 0 auto 30px auto;
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
    }

    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 20px;
    }

    .banner-card {  /* היה חסר נקודה לפני banner-card */
        position: relative;
        height: 170px;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.3s ease;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .banner-card:hover {
        transform: translateY(-5px);
    }
    
    .banner-links {
        margin: 20px 0;
    }
    
    .banner-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .banner-content {
         position: absolute;
         bottom: 0;
         left: 0;
         right: 0;
         padding: 20px;
         background: linear-gradient(transparent, rgba(0,0,0,0.8));
         color: white;
     }

    .banner-title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 5px;
    }
    .banner-subtitle {
        font-size: 16px;
        opacity: 0.9;
    }

    .banner-links a {
        color: #007bff;
        text-decoration: none;
        margin-right: 15px;
        font-size: 16px;
    }
    .banner-links a:hover {
        text-decoration: underline;
    }
    h1.modern-decorative {
        text-align: center;
        font-size: 48px;
        color: #2c3e50;
        text-transform: uppercase;
        letter-spacing: 4px;
        position: relative;
        margin: 40px 0;
        padding: 20px 0;
    }

    h1.modern-decorative::before,
    h1.modern-decorative::after {
        content: '';
        position: absolute;
        height: 3px;
        background: linear-gradient(90deg, transparent, #3498db, transparent);
    }

    h1.modern-decorative::before {
        left: 25%;
        right: 25%;
        top: 0;
    }

    h1.modern-decorative::after {
        left: 35%;
        right: 35%;
        bottom: 0;
    }

</style>

<script>
    function toggleFavorite(btn) {
        btn.classList.toggle('active');
        if (btn.classList.contains('active')) {
            btn.querySelector('i').classList.replace('far', 'fas');
        } else {
            btn.querySelector('i').classList.replace('fas', 'far');
        }
    }

    function updatePriceLabel(value) {
        const maxPrice = 200;
        const minPrice = Math.min(value, maxPrice - 50);
        const maxValue = Math.max(value, minPrice + 50);

        document.getElementById('priceLabel').textContent = `₪${minPrice} - ₪${maxValue}`;
        document.getElementById('minPrice').value = minPrice;
        document.getElementById('maxPrice').value = maxValue;
    }

    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);

        document.getElementById('sortDropdown').value = urlParams.get('sortBy') || '';
        document.getElementById('author').value = urlParams.get('author') || '';
        document.getElementById('genre').value = urlParams.get('genre') || '';
        document.getElementById('searchTerm').value = urlParams.get('searchTerm') || '';

        const minPrice = urlParams.get('minPrice');
        if (minPrice) {
            document.getElementById('priceRange').value = minPrice;
            updatePriceLabel(minPrice);
        }

        if (urlParams.get('isBorrowable'))
            document.querySelector('[name="isBorrowable"]').checked = true;
        if (urlParams.get('showDiscounted'))
            document.querySelector('[name="showDiscounted"]').checked = true;

        const publicationYear = urlParams.get('publicationYear');
        if (publicationYear)
            document.getElementById('publicationYear').value = publicationYear;
    });
</script>